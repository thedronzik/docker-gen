server {
	listen 80 default_server;
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;
	return 503;
}

{{ range $upstream, $containers := groupForNginx $ "Env.VIRTUAL_HOST" "," }}

    {{ $hp := split $upstream ":" }}
    {{ $host := index $hp 0 }}
    {{ $port := index $hp 1 }}

    # {{ $upstream }}
    upstream {{ $host }}_{{ $port }} {

    {{ range $index, $val := $containers }}

        {{ $value := $val.container }}
        {{ $addrLen := len $value.Addresses }}
        {{ $network := index $value.Networks 0 }}

        {{ range $i, $address := $value.Addresses }}
            {{ if eq $address.Port $val.portTo }}
                # {{$value.Name}}
                server {{ $network.IP }}:{{ $address.Port }};
            {{ end }}
        {{ end }}

    {{ end }}
    }

server {
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	server_name {{ $host }};
	listen {{ $port }};
	proxy_buffering off;
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

	location / {
		proxy_pass http://{{ trim $host }}_{{trim  $port }};
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# HTTP 1.1 support
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}
}
{{ end }}